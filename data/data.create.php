<?php
/**
 * 可制作道具列表生成函数（PHP 7.4兼容版）
 */
function CanCreate($user) {
    // 使用数组解构语法优化代码可读性
    $create = [
        // 剑
        1000,1001,1002,1003,1004,1005,1006,1007,1008,1020,1022,1023,
        // 双手剑
        1100,1101,1102,1103,1104,1120,
        // 短剑
        1201,1202,1203,1204,1205,1220,
        // 杖
        1700,1701,1702,1703,1704,1705,1706,
        // 双手杖
        1800,1801,1802,1803,1810,1811,1812,
        // 弓
        2000,2001,2002,2003,2004,2005,2006,2020,
        // 鞭
        2200,2201,2202,2203,2210,2211,
        // 盾
        3000,3001,3002,3003,3004,3005,3006,3007,3008,
        // 本
        3101,3102,3103,3104,3105,
        // 铠
        5000,5001,5002,5003,5004,5005,5007,5008,5009,
        // 服
        5100,5101,5102,5103,5104,5105,5106,5107,
        // 衣
        5200,5201,5202,5203,5204,5205,5206,
    ];
    
    return $create;
}

/**
 * 制作材料检查函数（PHP 7.4兼容版）
 */
function HaveNeeds(array $item, ?array $UserItem) : bool {
    // 增强类型检查和空值处理
    if (empty($UserItem)) return false;
    
    // 检查需求数组是否存在且有效
    if (!isset($item['need']) || !is_array($item['need']) || empty($item['need'])) {
        return false;
    }
    
    foreach ($item['need'] as $NeedNo => $Amount) {
        // 严格检查数组键存在和类型
        if (!isset($UserItem[$NeedNo]) || 
            !is_numeric($UserItem[$NeedNo]) || 
            (int)$UserItem[$NeedNo] < (int)$Amount) 
        {
            return false;
        }
    }
    return true;
}

/**
 * 道具能力可能性生成函数（PHP 7.4兼容版）
 */
function ItemAbilityPossibility(string $type) : array {
    // 修复常量未定义问题 - 将所有能力代码转换为字符串
    $abilityMap = function(array $abilities) {
        return array_map(function($code) {
            return is_int($code) ? (string)$code : $code;
        }, $abilities);
    };
    
    switch ($type) {
        case "剑":
        case "双手剑":
        case "匕首":
        case "魔杖":
        case "杖":
        case "弓":
        case "鞭":
            $low = $abilityMap([
                100,101,102,103,104,105,106,107,108,109,  // Atk+
                150,151,152,153,154,155,156,157,158,159,  // Matk+
                200,201,  // Atk*
                250,251,  // Matk*
                'H00','H01','H02',  // HP+
                'HM0','HM1','HM2',  // HP*
                'S00','S01',       // SP+
                'SM0','SM1','SM2',  // SP*
                'P00','P01','P02','P03','P04',  // STR+
                'I00','I01','I02','I03','I04',  // INT+
                'D00','D01','D02','D03','D04',  // DEX+
                'A00','A01','A02','A03','A04',  // SPD+
                'L00','L01','L02','L03','L04',  // LUK+
            ]);
            
            $high = $abilityMap([
                110,111,112,113,114,115,116,117,118,119,
                160,161,162,163,164,165,166,167,168,169,
                202,203,
                252,253,
                'H03','H04','H05',
                'HM3','HM4','HM5',
                'S02','S03',
                'SM3','SM4','SM5',
                'P05','P06','P07','P08','P09',
                'I05','I06','I07','I08','I09',
                'D05','D06','D07','D08','D09',
                'A05','A06','A07','A08','A09',
                'L05','L06','L07','L08','L09',
            ]);
            break;
            
        case "盾":
        case "书":
        case "甲":
        case "衣服":
        case "长袍":
            $low = $abilityMap([
                300,301,  // Def+
                350,351,  // Mdef+
                'H00','H01','H02',
                'HM0','HM1','HM2',
                'S00','S01',
                'SM0','SM1','SM2',
                'P00','P01','P02','P03','P04',
                'I00','I01','I02','I03','I04',
                'D00','D01','D02','D03','D04',
                'A00','A01','A02','A03','A04',
                'L00','L01','L02','L03','L04',
            ]);
            
            $high = $abilityMap([
                302,303,304,
                352,353,354,
                'H03','H04','H05',
                'HM3','HM4','HM5',
                'S02','S03',
                'SM3','SM4','SM5',
                'P05','P06','P07','P08','P09',
                'I05','I06','I07','I08','I09',
                'D05','D06','D07','D08','D09',
                'A05','A06','A07','A08','A09',
                'L05','L06','L07','L08','L09',
            ]);
            break;
            
        default:
            // 添加默认返回防止未定义情况
            $low = $high = [];
    }
    
    return [$low, $high];
}
?>